*filter
:INPUT [% config.firewall.ipv4.filter.INPUT.policy OR 'DROP' %] [0:0]
:FORWARD [% config.firewall.ipv4.filter.FORWARD.policy OR 'DROP' %] [0:0]
:OUTPUT [% config.firewall.ipv4.filter.OUTPUT.policy OR 'ACCEPT' %] [0:0]
[% FOREACH chain IN config.firewall.ipv4.filter %]
[% IF chain.name != 'INPUT' AND chain.name != 'OUTPUT' AND chain.name != 'FORWARD' %]
-N [% chain.name +%]
[% ELSE %]
-A [% chain.name +%] -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
[% END # IF %]
[% FOREACH rule IN chain.rules %]
[%#RULE: [% rule.keys.join(' ') + %]
[% IF rule.defined('services') %]
[% FOREACH service_name IN rule.services.list %]
[% SET service = config.firewall.services.item(service_name) %]
[% IF service.defined('ports') %]
[% FOREACH port IN service.ports.list %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -p [% service.protocol %]
 --dport [% port %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # FOREACH port %]
[% ELSE # IF ports %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -p [% service.protocol %]
[% IF rule.defined('icmp_type') %] --icmp-type [% rule.icmp_type %][% END %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # IF ports %]
[% END # FOREACH service %]
[% ELSE %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # IF %]
[% END # FOREACH rule %]
[% END # FOREACH chain %]
COMMIT
*nat
:PREROUTING [% config.firewall.ipv4.nat.POSTROUTING.policy OR 'ACCEPT' %] [0:0]
:INPUT [% config.firewall.ipv4.nat.INPUT.policy OR 'ACCEPT' %] [0:0]
:OUTPUT [% config.firewall.ipv4.nat.OUTPUT.policy OR 'ACCEPT' %] [0:0]
:POSTROUTING [% config.firewall.ipv4.nat.POSTROUTING.policy OR 'ACCEPT' %] [0:0]
[% FOREACH chain IN config.firewall.ipv4.nat %]
[% IF chain.name != 'POSTROUTING' AND chain.name != 'PREROUTING' %]
-t nat -N [% chain.name +%]
[% END # IF chain.name != 'POSTROUTING' AND chain.name != 'PREROUTING' %]
[% FOREACH rule IN chain.rules %]
[% IF rule.defined('services') %]
[% FOREACH service_name IN rule.services.list %]
[% SET service = config.firewall.services.item(service_name) %]
[% IF service.defined('ports') %]
[% FOREACH port IN service.ports.list %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -p [% service.protocol %]
 --dport [% port %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # FOREACH port %]
[% ELSE # IF ports %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -p [% service.protocol %]
[% IF rule.defined('icmp_type') %] --icmp-type [% rule.icmp_type %][% END %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # IF ports %]
[% END # FOREACH service %]
[% ELSE %]
-A [% chain.name %] -m conntrack --ctstate NEW[%# No CRLF %]
[% IF rule.defined('iint') %] -i [% rule.iint %][% END %]
[% IF rule.defined('oint') %] -o [% rule.oint %][% END %]
[% IF rule.defined('src') %] -s [% config.firewall.ipv4.extremity.item(rule.src) %][% END %]
[% IF rule.defined('dst') %] -d [% config.firewall.ipv4.extremity.item(rule.dst) %][% END %]
 -j [% rule.target %]
[% IF rule.defined('log_prefix') %] --log-prefix [% rule.log_prefix %][% END %]
[% IF rule.defined('log_level') %] --log-level [% rule.log_level %][% END %]
[% IF rule.defined('to_destination') %] --to-destination [% config.firewall.ipv4.extremity.item(rule.to_destination) %][% END %]
[% IF rule.defined('to_source') %] --to-source [% config.firewall.ipv4.extremity.item(rule.to_source) %][% END %]
[%# +%]
[% END # IF %]
[% END # FOREACH rule %]
[% END # FOREACH chain %]
COMMIT
